language: php
php:
  - 7.3

dist: bionic

git:
  depth: false

cache:
  yarn: true
  directories:
    - ".yarn"
    - "vendor"

env:
  global:
    - SKIP_BUILD=`[[ $TRAVIS_COMMIT_MESSAGE == *"[skipbuild]"* ]]; echo $?`

# master: build & sonar
# pull intern: build & sonar (2 builds, 1 met type pull_request, 1 met type push)
# pull extern: build
jobs:
  include:
    - stage: Build & Deploy
      name: Build Javascript, Scss en Blade templates. Voer een deploy uit.
      services: mysql
      before_install: nvm install 12
      script: ./bin/ci/build.sh
      deploy:
        provider: script
        script: ./bin/ci/deploy.sh
        skip_cleanup: true
        on:
          branch: master
      if: type != pull_request OR fork = true
    - stage: Post-build
      name: Voer sonar scanner uit op de repository
      before_install: nvm install 12
      script: |
        npm install typescript
        sonar-scanner
      if: (branch = master OR type = pull_request) AND fork = false
      addons:
        sonarcloud:
          organization: "csrdelft"
    - name: Maak een release voor het backend project in Sentry
      env: SENTRY_ORG=csrdelft SENTRY_PROJECT=stek SENTRY_ENVIRONMENT=prod
      script: |
        curl -sL https://sentry.io/get-cli/ | bash
        export SENTRY_RELEASE=$(sentry-cli releases propose-version)
        sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
        sentry-cli releases set-commits $SENTRY_RELEASE --auto
        sentry-cli releases finalize $SENTRY_RELEASE
        sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT
      if: branch = master AND fork = false AND type != pull_request
    - name: Maak een release voor het frontend project in Sentry
      env: SENTRY_ORG=csrdelft SENTRY_PROJECT=stek-frontend SENTRY_ENVIRONMENT=prod
      before_install: nvm install 12
      script: |
        yarn
        yarn run production
        curl -sL https://sentry.io/get-cli/ | bash
        export SENTRY_RELEASE=$(sentry-cli releases propose-version)
        sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
        sentry-cli releases set-commits $SENTRY_RELEASE --auto
        sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps ./htdocs/dist/js
        sentry-cli releases finalize $SENTRY_RELEASE
        sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT
      if: branch = master AND fork = false AND type != pull_request

stages:
  - build
  - analysis

script: skip
